#!/bin/sh
echo -e;	echo "|======================================================|"
		echo "| Automated compile and install script by Mark Johnson |"
		echo "|======================================================|"; echo -e
		echo "This script assumes you have the necessary dependencies."; echo -e

function MAKE_INSTALL_PACKAGE {
if [ ! -e $PACKAGENAME.* ]; then
	echo -e "The SlackBuild archive for '$PACKAGENAME' does not appear to exist.\n"
	return 1
fi
tar -xf $PACKAGENAME.*
cp $PACKAGENAME*.* $PACKAGENAME/
if ! $AUTOMATIC; then
	INDEX=0
	SOURCES=()
	ls -l . && echo "Are there any sources of other names? (Press enter if none)"
	read SOURCES[$INDEX]
	while [[ "${SOURCES[$INDEX]}" != "" ]]; do
		cp ${SOURCES[$INDEX]}*.* $PACKAGENAME/
		((INDEX++))
		ls -l . && echo "Are there any more sources? (Press enter if none left)"
		read SOURCES[$INDEX]
	done
	unset INDEX
fi
cd $PACKAGENAME
if ! $AUTOMATIC; then
	echo "Edit SlackBuild? (y/N)"; read EDIT
	if [[ "$EDIT" = "y" || "$EDIT" = "Y" ]]; then
		vi $PACKAGENAME.SlackBuild
	fi
	unset EDIT
fi
if ! ./$PACKAGENAME.SlackBuild; then echo -e "Error! Will not clean up.\n"; return 1; fi
installpkg /tmp/$PACKAGENAME*.t?z
mv /tmp/$PACKAGENAME*.t?z /home/PACKAGES/ && cd ../
if ! $AUTOMATIC; then
	echo "Clean up? (Y/n)"; read CLEAN
	if [[ "$CLEAN" != "n" || "$CLEAN" != "N" ]]; then
		rm $PACKAGENAME.* && rm -R $PACKAGENAME
		if [ -e $PACKAGENAME*.* ]; then rm $PACKAGENAME*.*; fi
		for ARCHIVE in ${SOURCES[*]}; do rm $ARCHIVE*.*; done
		unset SOURCES
	fi
	unset CLEAN
else
	rm $PACKAGENAME.* && rm $PACKAGENAME*.* && rm -R $PACKAGENAME
fi
}

if [[ $EUID -ne 0 ]]; then
	echo "This script must be run as root."; echo -e
	exit 1
fi
if [ ! -d /home/PACKAGES ]; then mkdir /home/PACKAGES; fi
if [[ $# -eq 0 ]]; then
	AUTOMATIC=false
	AGAIN="y"
	while [[ "$AGAIN" = "y" || "$AGAIN" = "Y" ]]; do
		ls -l .; echo "What is the name of the package?"
		read PACKAGENAME
		MAKE_INSTALL_PACKAGE
		echo "Do you have another package to install? (y/N)"
		read AGAIN
	done
else
	if [[ "$1" = "-a" ]]; then
		PACKAGENAME="$2"
		AUTOMATIC=true
		MAKE_INSTALL_PACKAGE
	elif [[ "$1" = "-u" ]]; then
		if [ ! -e /home/PACKAGES/$2*.t?z ]; then
			echo -e "The package '$2' does not appear to be installed\n"
			exit 1
		fi
		removepkg /home/PACKAGES/$2*.t?z
		rm /home/PACKAGES/$2*.t?z
		echo -e
	else
		PACKAGENAME="$1"
		AUTOMATIC=false
		MAKE_INSTALL_PACKAGE
	fi
fi
exit 0
